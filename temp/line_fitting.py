import vedo
from sklearn.linear_model import LinearRegression, QuantileRegressor
import numpy as np

data = np.array([[-0.33714786,  -5.26869974, -38.57329483],
 [-0.35129941,  -6.04195528, -37.92544136],
 [-0.35129941,  -6.04195528, -37.92544136],
 [-0.35129941,  -6.04195528, -37.92544136],
 [-0.34967664,  -5.91698251, -38.1487915 ],
 [-0.35129941,  -6.04195528, -37.92544136],
 [-0.35284199,  -6.36049466, -36.89298859],
 [-0.35284199,  -6.36049466, -36.89298859],
 [-0.34939385,  -6.39227924, -36.14672775],
 [-0.34939385,  -6.39227924, -36.14672775],
 [-0.34740364,  -6.66008687, -34.69170685],
 [-0.34746299,  -6.76008687, -34.29170685],
 [-0.34752268,  -6.86008687, -33.89176674],
 [-0.34770108,  -7.16008687, -32.69182644],
 [-0.34770108,  -7.16008687, -32.69182644],
 [-0.34770108,  -7.16008687, -32.69182644],
 [-0.34764172,  -7.06008687, -33.09182644],
 [-0.34776077,  -7.26008687, -32.29188614],
 [-0.34782012,  -7.36008687, -31.89188614],
 [-0.34782012,  -7.36008687, -31.89188614],
 [-0.34433449,  -7.4074378,  -31.07501392],
 [-0.34433449,  -7.4074378,  -31.07501392],
 [-0.34296479,  -7.6974802,  -29.63950481],
 [-0.34308383,  -7.8974802,  -28.83956451],
 [-0.34308383,  -7.8974802,  -28.83956451],
 [-0.34320287,  -8.0974802,  -28.03962421],
 [-0.34320287,  -8.0974802,  -28.03962421],
 [-0.34320287,  -8.0974802,  -28.03962421],
 [-0.34326223,  -8.1974802,  -27.63962421],
 [-0.34326223,  -8.1974802,  -27.63962421],
 [-0.34342391,  -8.38237162, -26.90933399],
 [-0.34342391,  -8.38237162, -26.90933399],
 [-0.3395866,   -8.40099239, -26.14762726],
 [-0.33718042,  -8.40099239, -25.71794052],
 [-0.3315648,   -8.40099239, -24.71512489],
 [-0.3315648,   -8.40099239, -24.71512489],
 [-0.32594918,  -8.40099239, -23.71230907],
 [-0.32594918,  -8.40099239, -23.71230907],
 [-0.32033355,  -8.40099239, -22.70949345],
 [-0.32033355,  -8.40099239, -22.70949345],
 [-0.31471793,  -8.40099239, -21.70667763],
 [-0.31471793,  -8.40099239, -21.70667763],
 [-0.30875552,  -8.40099239, -20.64193306],
 [-0.30875552,  -8.40099239, -20.64193306],
 [-0.30400145,  -8.43887272, -19.63743382],
 [-0.30400145,  -8.43887272, -19.63743382],
 [-0.30164827,  -8.4583025,  -19.13743382],
 [-0.29977039,  -8.74012051, -17.64494734],
 [-0.29977039,  -8.74012051, -17.64494734],
 [-0.29982975,  -8.84012051, -17.24494734],
 [-0.29988944,  -8.94012051, -16.84500713],
 [-0.30035527,  -9.14012051, -16.10699577],
 [-0.30035527,  -9.14012051, -16.10699577],
 [-0.30035527,  -9.14012051, -16.10699577],
 [-0.29998046,  -9.22123814, -15.70699577],
 [-0.29961276,  -9.30224018, -15.30873899],
 [-0.29922537,  -9.3828104,  -14.90873899],
 [-0.29922537,  -9.3828104,  -14.90873899],
 [-0.29863456,  -9.65612698, -13.68099957],
 [-0.29869391,  -9.75612698, -13.28099957],
 [-0.2987536,   -9.85612698, -12.88105927],
 [-0.30027148, -10.13051758, -12.02547112],
 [-0.30027148, -10.13051758, -12.02547112],
 [-0.3024562,  -10.32051773, -11.63547096],
 [-0.30027148, -10.13051758, -12.02547112],
 [-0.30477901, -10.5122221,  -11.26313219],
 [-0.30769764, -10.7122221,  -10.96313219],
 [-0.31211347, -11.13255634, -10.02580423],
 [-0.31211347, -11.13255634, -10.02580423],
 [-0.31429819, -11.3225565,   -9.63580413],
 [-0.31003926, -10.94890966, -10.40945091],
 [-0.31661232, -11.51414318,  -9.2623971 ],
 [-0.31953095, -11.71414318,  -8.96239715],
 [-0.32334289, -12.24622345,  -7.4584013 ],
 [-0.32334289, -12.24622345,  -7.4584013 ],
 [-0.32334289, -12.24622345,  -7.4584013 ],
 [-0.32334289, -12.24622345,  -7.4584013 ],
 [-0.32334289, -12.24622345,  -7.4584013 ],]
)

data = np.array([
 [ 2.57527559e-01,  1.41494906e+01, -1.21230562e+01],
 [ 2.62161838e-01,  1.42494906e+01, -1.17184219e+01],
 [ 2.66769516e-01,  1.43494906e+01, -1.13184219e+01],
 [ 2.76011473e-01,  1.45494906e+01, -1.05137877e+01],
 [ 2.76011473e-01,  1.45494906e+01, -1.05137877e+01],
 [ 2.76011473e-01,  1.45494906e+01, -1.05137877e+01],
 [-3.24634364e-01, -1.22649540e+01, -7.15922275e+00],
 [-3.21971828e-01, -1.22059291e+01, -6.93307953e+00],
 [-3.15229550e-01, -1.20231384e+01, -6.49464030e+00],
 [-3.21971828e-01, -1.22059291e+01, -6.93307953e+00],
 [-3.05055866e-01, -1.16834809e+01, -6.09018483e+00],
 [ 3.15320253e-01,  1.51542350e+01, -6.10094590e+00],
 [ 3.19954529e-01,  1.52542350e+01, -5.69631159e+00],
 [-3.05055866e-01, -1.16834809e+01, -6.09018483e+00],
 [-2.99060538e-01, -1.14514567e+01, -5.98018498e+00],
 [-2.99060538e-01, -1.14514567e+01, -5.98018498e+00],
 [-2.99060538e-01, -1.14514567e+01, -5.98018498e+00],
 [-2.73410912e-01, -1.04088633e+01, -5.71068926e+00],
 [-2.73410912e-01, -1.04088633e+01, -5.71068926e+00],
 [-2.55229999e-01, -9.62693310e+00, -5.69254351e+00],
 [-2.44875544e-01, -9.17903976e+00, -5.69254351e+00],
 [-2.21483862e-01, -8.16720715e+00, -5.69254351e+00],
 [-2.21483862e-01, -8.16720715e+00, -5.69254351e+00],
 [-1.98092182e-01, -7.15537457e+00, -5.69254351e+00],
 [-1.98092182e-01, -7.15537457e+00, -5.69254351e+00],
 [-1.74700499e-01, -6.14354191e+00, -5.69254351e+00],
 [-1.74700499e-01, -6.14354191e+00, -5.69254351e+00],
 [-1.51308812e-01, -5.13170922e+00, -5.69254351e+00],
 [-1.51308812e-01, -5.13170922e+00, -5.69254351e+00],
 [-1.27917126e-01, -4.11987655e+00, -5.69254351e+00],
 [-1.27917126e-01, -4.11987655e+00, -5.69254351e+00],
 [-1.04525444e-01, -3.10804391e+00, -5.69254351e+00],
 [-1.04525444e-01, -3.10804391e+00, -5.69254351e+00],
 [-8.11337613e-02, -2.09621125e+00, -5.69254351e+00],
 [-8.11337613e-02, -2.09621125e+00, -5.69254351e+00],
 [-5.77420788e-02, -1.08437860e+00, -5.69254351e+00],
 [-5.77420788e-02, -1.08437860e+00, -5.69254351e+00],
 [-3.50820809e-02, -1.28028367e-01, -5.59655108e+00],
 [-2.45087412e-02,  3.17063953e-01, -5.54713407e+00],
 [-1.36201215e-02,  7.76107456e-01, -5.49897919e+00],
 [ 1.57831444e-02,  1.97726827e+00, -5.21417637e+00],
 [ 1.57831444e-02,  1.97726827e+00, -5.21417637e+00],
 [-2.86033573e-03,  1.21918886e+00, -5.40897903e+00],
 [ 2.45481058e-02,  2.33157874e+00, -5.11417637e+00],
 [ 3.33461885e-02,  2.68732189e+00, -5.01417637e+00],
 [ 4.21794736e-02,  3.03495481e+00, -4.87537670e+00],
 [ 3.24562207e-01,  1.53542350e+01, -5.29631157e+00],
 [ 3.33804163e-01,  1.55542350e+01, -4.49167726e+00],
 [ 3.33804163e-01,  1.55542350e+01, -4.49167726e+00],
 [ 3.33804163e-01,  1.55542350e+01, -4.49167726e+00],
 [ 4.97912037e-02,  3.34001458e+00, -4.77792864e+00],
 [ 4.97912037e-02,  3.34001458e+00, -4.77792864e+00],
 [ 5.86465573e-02,  3.68841658e+00, -4.63838198e+00],
 [ 8.00477762e-02,  4.51289709e+00, -4.23055818e+00],
 [ 8.00477762e-02,  4.51289709e+00, -4.23055818e+00],
 [ 7.34769370e-02,  4.25597851e+00, -4.34055805e+00],
 [ 9.64756783e-02,  5.17255838e+00, -4.02536080e+00],
 [ 9.64756783e-02,  5.17255838e+00, -4.02536080e+00],
 [ 1.04947951e-01,  5.50592432e+00, -3.89199481e+00],
 [ 1.04947951e-01,  5.50592432e+00, -3.89199481e+00],
 [ 1.21624495e-01,  6.14096713e+00, -3.54431944e+00],
 [ 1.29461136e-01,  6.44096713e+00, -3.38730638e+00],
 [ 1.46043914e-01,  7.10499249e+00, -3.17270231e+00],
 [ 1.65918774e-01,  7.91504607e+00, -2.97270231e+00],
 [ 1.65918774e-01,  7.91504607e+00, -2.97270231e+00],
 [ 1.65918774e-01,  7.91504607e+00, -2.97270231e+00],
 [ 1.75101084e-01,  8.28076091e+00, -2.84592373e+00],
 [ 1.85207695e-01,  8.67076106e+00, -2.65592358e+00],
 [ 2.02357998e-01,  9.34462290e+00, -2.38206174e+00],
 [ 2.11681528e-01,  9.72221956e+00, -2.27853658e+00],
 [ 2.21502750e-01,  1.01222196e+01, -2.17853658e+00],
 [ 2.41443114e-01,  1.09299781e+01, -1.95787995e+00],
 [ 2.41443114e-01,  1.09299781e+01, -1.95787995e+00],
 [ 2.41443114e-01,  1.09299781e+01, -1.95787995e+00],
 [ 2.49806298e-01,  1.12612272e+01, -1.83499403e+00],
 [ 2.59429663e-01,  1.16303241e+01, -1.64499388e+00],
 [ 2.83418764e-01,  1.25727364e+01, -1.26129783e+00],
 [ 2.92818275e-01,  1.29544950e+01, -1.16129783e+00],
 [ 2.83418764e-01,  1.25727364e+01, -1.26129783e+00],
 [ 3.00927100e-01,  1.32804235e+01, -1.06129783e+00],
 [ 3.00927100e-01,  1.32804235e+01, -1.06129783e+00],
 [ 3.10381320e-01,  1.36645486e+01, -9.61297834e-01],
 [ 3.10381320e-01,  1.36645486e+01, -9.61297834e-01],
 [ 3.33578262e-01,  1.46088693e+01, -7.23304027e-01],
 [ 3.33578262e-01,  1.46088693e+01, -7.23304027e-01],]
)

linear_reg = LinearRegression().fit(data[:,:2],data[:,2].reshape(-1,1))
def fit_l1(data,alpha=0.2):
    quantile_reg = QuantileRegressor(solver='interior-point', alpha=alpha).fit(data[:,:2],data[:,2])
    fitted_data = []
    for datum in data:
        x,y,z = datum
        z_new, = quantile_reg.predict([[x,y],]).flatten().tolist()
        fitted_data.append([x,y,z_new])
    return fitted_data

fitted_data = fit_l1(data)
quantile_reg_line = vedo.fit_line(vedo.Points(fitted_data))

default_line = vedo.fit_line(vedo.Points(data))
endpoints = default_line.points()
x0,y0,z0 = endpoints[0]
x1,y1,z1 = endpoints[1]
z0,z1 = linear_reg.predict([[x0,y0],[x1,y1]]).flatten().tolist()
linear_reg_endpoints = [[x0,y0,z0],[x1,y1,z1]]
linear_reg_line = vedo.fit_line(vedo.Points(linear_reg_endpoints))

# z0,z1 = quantile_reg.predict([[x0,y0],[x1,y1]]).flatten().tolist()
# quantile_reg_endpoints = [[x0,y0,z0],[x1,y1,z1]]
# quantile_reg_line = vedo.fit_line(vedo.Points(quantile_reg_endpoints))

print(endpoints)
print(linear_reg_endpoints)
# print(quantile_reg_endpoints)

vedo.show(vedo.Points(data).c('black'),
          vedo.Points(fitted_data).c('red'),
          default_line,
          linear_reg_line.c('blue'),
          quantile_reg_line.c('red'),
          axes=1)